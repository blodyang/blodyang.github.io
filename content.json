{"pages":[{"title":"About","date":"2020-07-31T18:41:05.830Z","path":"about/index.html","text":""},{"title":"Categories","date":"2020-07-31T18:41:05.836Z","path":"categories/index.html","text":""},{"title":"Tags","date":"2020-07-31T18:41:05.843Z","path":"tags/index.html","text":""}],"posts":[{"title":"vue","date":"1900-08-14T16:00:00.000Z","path":"wiki/vue/","text":"v-if v-show区别1234567v-if更高的切换开销，v-show更高的渲染开销，频繁切换 v-show比较好，运行时条件不太可能改变 v-if比较好v-if监听组件的销毁与创建 v-if惰性，初始条件为假，什么也不做，只到条件第一次为真时候，才会开始条件渲染v-show 不管初始条件是什么，元素总是被渲染，并且只是简单的基于css进行切换 Vue生命周期12345678910111213（2+） beforeCreate created beforeMount mounted beforeUpdate updated beforeDestroy destroyed -----使用了 keep-alive 就会多2个生命周期： activated deactivated 二、生命周期的理解 总共分为：8个阶段 创建前&#x2F;后： beforeCreate ：vue实例的挂载元素$el和数据对象data都为undefined，还未初始化。 created ： vue实例的数据对象data有了，但是$el还是没有 载入前&#x2F;后 beforeMount : vue实例的$el和data都初始化了,但还是挂载之前为虚拟dom节点，data.msg还未替换。 mounted : vue实例挂载完成,data.msg成功渲染的 更新前&#x2F;后 当data变化时，会触发：beforeUpdate、updated 销毁前&#x2F;后 当销毁的时候，会触发： beforeDestroy、destroyed 三、DOM 渲染在哪个周期中就已经完成 ： mounted 组件传值123父传子 props字传父 $emit传递一个事件，父组件监听事件兄弟传值 bus传值 $emit触发 $on监听 keep-alive1234567是什么？ 内置组件，能在组件切换过程中将状态保存在内存中，防止重复渲染dom说明：keep-alive不会再dom树中渲染 Vue 中的data为什么必须是一个函数12345678Vue 组件 data 为什么必须是函数 不用脚手架 vue.js new Vue(&#123; el:&quot;#app&quot;, template:xxx data: &#123; &#125; &#125;) 脚手架 组件 data 为什么必须是函数? 因为 JS 本身的特性带来的， 如果 data 是一个对象，那么由于对象本身属于引用类型， 当我们修改其中的一个属性时， 会影响到所有 Vue 实例的数据。如果将 data 作为一个函数返回一个对象， 那么每一个实例的 data 属性都是独立的，不会相互影响了。 vue-cli项目中src目录每个文件夹和文件的用法？12345678910src assets | 静态资源 （图片、js、css）components | 非路由组件views | 路由组件router | 路由配置store | vuex（仓库）App.vue | 挂载的第一个组件main.js | 全局的文件index.html &#x3D;&gt; main.js &#x3D;&gt; App.vue 你们vue项目是打包了一个js文件，一个css文件，还是有多个文件？ 1234 根据vue-cli脚手架规范，一个js文件，一个CSS文件。 在打包之前 1.代理的url 2.build assetsPublicPath: &#39;.&#x2F;&#39; watch和computed差异12345678computed ： 计算属性 1. 计算属性是由data中的已知值，得到一个新的值 2. 性能不好 3. 别人变化影响我自己 watch : 监听数据的变化 1. 监听data中的数据 2. 我的变化影响别人 Vue 中 插件使用1231. 下载 npm install xxx2. 引入 import xx from &#39;xxxx&#39; Vue.use(xxx)3. 配置 &lt;xx v-model&#x3D;&#39;xx&#39; select&#x3D;&#39;xx&#39;&gt;&lt;&#x2F;xx&gt; vue 中 key 的作用 总结：1234key的作用主要是为了高效的更新虚拟dom 没有加key，diff默认算法的问题（虚拟dom） 1. 如果节点类型不同，直接干掉前面所有的节点，再创建 路由模式1231.Hash: 使用URL的hash值来作为路由。支持所有浏览器。2.History: 以来HTML5 History API 和服务器配置3. Abstract： 支持所有javascript运行模式。如果发现没有浏览器的API，路由会自动强制进入这个模式。","tags":[{"name":"vue","slug":"vue","permalink":"http://yoursite.com/tags/vue/"},{"name":"生命周期","slug":"生命周期","permalink":"http://yoursite.com/tags/%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/"}],"categories":[{"name":"vue","slug":"vue","permalink":"http://yoursite.com/categories/vue/"}]}],"categories":[{"name":"vue","slug":"vue","permalink":"http://yoursite.com/categories/vue/"}],"tags":[{"name":"vue","slug":"vue","permalink":"http://yoursite.com/tags/vue/"},{"name":"生命周期","slug":"生命周期","permalink":"http://yoursite.com/tags/%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/"}]}